package com.bharatiscript.padaayifruits;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class QuizActivity extends AppCompatActivity {

    ImageView questionImage;
    Button[] optionButtons = new Button[4];
    TextView scoreText, categoryText;

    List<Question> allQuestions = new ArrayList<>();
    List<Question> selectedQuestions;
    int currentQuestionIndex = 0;
    int score = 0;
    String selectedCategory = "fruits";

    Handler handler = new Handler();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_quiz);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });

        Intent intent = getIntent();
        if (intent != null && intent.hasExtra("CATEGORY")) {
            selectedCategory = intent.getStringExtra("CATEGORY");
        }


        scoreText = findViewById(R.id.scoreText);
        categoryText = findViewById(R.id.categoryText);
        questionImage = findViewById(R.id.questionImage);
        optionButtons[0] = findViewById(R.id.option1);
        optionButtons[1] = findViewById(R.id.option2);
        optionButtons[2] = findViewById(R.id.option3);
        optionButtons[3] = findViewById(R.id.option4);

        setCategoryTitle();

        loadQuestionsByCategory();
        Collections.shuffle(allQuestions);
        int questionCount = Math.min(5, allQuestions.size());
        selectedQuestions = allQuestions.subList(0, questionCount);

        showQuestion();

        for (int i = 0; i < 4; i++) {
            final int index = i;
            optionButtons[i].setOnClickListener(v -> handleAnswer(index));
        }
    }

    private void setCategoryTitle() {
        String title = "";
        switch (selectedCategory) {
            case "fruits":
                title = "‡§´‡§≤ (Fruits)";
                break;
            case "animals":
                title = "‡§ú‡§æ‡§®‡§µ‡§∞ (Animals)";
                break;
            case "vegetables":
                title = "‡§∏‡§¨‡•ç‡§ú‡§ø‡§Ø‡§æ‡§Ç (Vegetables)";
                break;
            case "patriots":
                title = "‡§™‡§§‡§®‡•Ä (Patriots)";
                break;
            case "birds":
                title = "‡§™‡•á‡§Ç‡§ó‡•Å‡§á‡§® (Birds)";
                break;
            case "monuments":
                title = "‡§∏‡•ç‡§Æ‡§æ‡§∞‡§ï (Monuments)";
                break;
        }
        categoryText.setText(title);
    }

    private void showQuestion() {
        if (currentQuestionIndex >= selectedQuestions.size()) {
            showScorePopup();
            return;
        }

        Question q = selectedQuestions.get(currentQuestionIndex);
        questionImage.setImageResource(q.imageResId);
        for (int i = 0; i < 4; i++) {
            optionButtons[i].setText(q.options[i]);
        }
        scoreText.setText("Score: " + score);
    }

    private void handleAnswer(int selectedIndex) {
        Question q = selectedQuestions.get(currentQuestionIndex);
        if (selectedIndex == q.correctIndex) {
            score++;
        }
        currentQuestionIndex++;
        showQuestion();
    }

    private void showScorePopup() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("üéâ Quiz Complete üéâ");

        String message = "Your Score: " + score + "/" + selectedQuestions.size() +
                "\n\n‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶ ‡§ñ‡•á‡§≤‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è!\n\n‡§Ü‡§™ ‡§ï‡•ç‡§Ø‡§æ ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡•á‡§Ç‡§ó‡•á?";
        builder.setMessage(message);
        builder.setCancelable(false);

        builder.setPositiveButton("Retry", (dialog, which) -> {
            restartQuiz();
        });

        builder.setNeutralButton("Categories", (dialog, which) -> {
            goToCategories();
        });

        builder.setNegativeButton("Home", (dialog, which) -> {
            goToHome();
        });

        AlertDialog dialog = builder.create();
        dialog.show();

        handler.postDelayed(() -> {
            if (dialog.isShowing()) {
                dialog.dismiss();
                goToHome();
            }
        }, 15000);
    }

    private void goToCategories() {
        startActivity(new Intent(this, CategorySelectionActivity.class));
        finish();
    }

    private void goToHome() {
        startActivity(new Intent(this, MainActivity.class));
        finish();
    }

    @Override
    protected void onPause() {
        super.onPause();
        MusicService.pauseMusic();
    }

    @Override
    protected void onResume() {
        super.onResume();
        MusicService.resumeMusic();
    }

    private void loadQuestionsByCategory() {
        allQuestions.clear();

        switch (selectedCategory) {
            case "fruits":
                loadFruitQuestions();
                break;
            case "animals":
                loadAnimalQuestions();
                break;
            case "vegetables":
                loadVegetableQuestions();
                break;
            case "monuments":
                loadMonumentQuestions();
                break;
            case "birds":
                loadBirdsQuestions();
                break;
            case "patriots":
                loadPatriotsQuestions();
                break;
            default:
                loadFruitQuestions();
                break;
        }
    }

    private void loadFruitQuestions() {
        allQuestions.add(new Question(R.drawable.apple, new String[]{"‡§®‡•Ä‡§Ç‡§¨‡•Ç", "‡§∏‡•á‡§¨", "‡§™‡§™‡•Ä‡§§‡§æ", "‡§§‡§∞‡§¨‡•Ç‡§ú"}, 1));
        allQuestions.add(new Question(R.drawable.mango, new String[]{"‡§®‡§æ‡§∞‡§ø‡§Ø‡§≤", "‡§®‡•Ä‡§Ç‡§¨‡•Ç", "‡§≤‡•Ä‡§ö‡•Ä", "‡§Ü‡§Æ"}, 3));
        allQuestions.add(new Question(R.drawable.papaya, new String[]{"‡§Ö‡§Ç‡§ó‡•Ç‡§∞", "‡§®‡§æ‡§∞‡§ø‡§Ø‡§≤", "‡§®‡•Ä‡§Ç‡§¨‡•Ç", "‡§™‡§™‡•Ä‡§§‡§æ"}, 3));
        allQuestions.add(new Question(R.drawable.grapes, new String[]{"‡§Ö‡§Ç‡§ó‡•Ç‡§∞", "‡§≤‡•Ä‡§ö‡•Ä", "‡§∏‡§Ç‡§§‡§∞‡§æ", "‡§ï‡•á‡§≤‡§æ"}, 0));
        allQuestions.add(new Question(R.drawable.coconut, new String[]{"‡§ï‡•á‡§≤‡§æ", "‡§§‡§∞‡§¨‡•Ç‡§ú", "‡§®‡§æ‡§∞‡§ø‡§Ø‡§≤", "‡§Ü‡§Æ"}, 2));
        allQuestions.add(new Question(R.drawable.orange, new String[]{"‡§∞‡§∏‡§≠‡§∞‡•Ä", "‡§Ü‡§Æ", "‡§∏‡•á‡§¨", "‡§∏‡§Ç‡§§‡§∞‡§æ"}, 3));
        allQuestions.add(new Question(R.drawable.pineapple, new String[]{"‡§∏‡•á‡§¨", "‡§ï‡•á‡§≤‡§æ", "‡§Ö‡§®‡§æ‡§®‡§æ‡§∏", "‡§Ö‡§Ç‡§ó‡•Ç‡§∞"}, 2));
        allQuestions.add(new Question(R.drawable.pomegranate, new String[]{"‡§§‡§∞‡§¨‡•Ç‡§ú", "‡§Ü‡§Æ", "‡§∏‡§Ç‡§§‡§∞‡§æ", "‡§Ö‡§®‡§æ‡§∞"}, 3));
        allQuestions.add(new Question(R.drawable.banana, new String[]{"‡§Ü‡§Æ", "‡§∏‡•á‡§¨", "‡§≤‡•Ä‡§ö‡•Ä", "‡§ï‡•á‡§≤‡§æ"}, 3));
        allQuestions.add(new Question(R.drawable.lemon, new String[]{"‡§Ö‡§®‡§æ‡§®‡§æ‡§∏", "‡§®‡•Ä‡§Ç‡§¨‡•Ç", "‡§ï‡•á‡§≤‡§æ", "‡§§‡§∞‡§¨‡•Ç‡§ú"}, 1));
        allQuestions.add(new Question(R.drawable.pear, new String[]{"‡§®‡§æ‡§∂‡§™‡§æ‡§§‡•Ä", "‡§®‡•Ä‡§Ç‡§¨‡•Ç", "‡§ï‡•á‡§≤‡§æ", "‡§Ü‡§Æ"}, 0));
        allQuestions.add(new Question(R.drawable.jackfruit, new String[]{"‡§ï‡§ü‡§π‡§≤", "‡§Ü‡§Æ", "‡§≤‡•Ä‡§ö‡•Ä", "‡§®‡•Ä‡§Ç‡§¨‡•Ç"}, 0));
    }

    private void loadBirdsQuestions(){
        allQuestions.add(new Question(R.drawable.penguin, new String[]{"‡§ï‡§¨‡•Ç‡§§‡§∞", "‡§™‡•á‡§Ç‡§ó‡•Å‡§á‡§®", "‡§ï‡•å‡§µ‡§æ", "‡§§‡•ã‡§§‡§æ"}, 1));
        allQuestions.add(new Question(R.drawable.pigeon, new String[]{"‡§ï‡§¨‡•Ç‡§§‡§∞", "‡§Æ‡•ã‡§∞", "‡§ó‡•å‡§∞‡•à‡§Ø‡§æ", "‡§ö‡•Ä‡§≤"}, 0));
        allQuestions.add(new Question(R.drawable.sparrow, new String[]{"‡§ó‡•å‡§∞‡•à‡§Ø‡§æ", "‡§â‡§≤‡•ç‡§≤‡•Ç", "‡§∏‡•ç‡§µ‡§æ‡§®", "‡§ï‡•å‡§µ‡§æ"}, 0));
        allQuestions.add(new Question(R.drawable.eagle, new String[]{"‡§Æ‡•ã‡§∞", "‡§ö‡•Ä‡§≤", "‡§§‡•ã‡§§‡§æ", "‡§ï‡§¨‡•Ç‡§§‡§∞"}, 1));
        allQuestions.add(new Question(R.drawable.crow, new String[]{"‡§ï‡•å‡§µ‡§æ", "‡§∏‡•ç‡§µ‡§æ‡§®", "‡§§‡•ã‡§§‡§æ", "‡§ó‡•å‡§∞‡•à‡§Ø‡§æ"}, 0));
        allQuestions.add(new Question(R.drawable.peacock, new String[]{"‡§§‡•ã‡§§‡§æ", "‡§™‡•á‡§Ç‡§ó‡•Å‡§á‡§®", "‡§Æ‡•ã‡§∞", "‡§â‡§≤‡•ç‡§≤‡•Ç"}, 2));
        allQuestions.add(new Question(R.drawable.woodpecker, new String[]{"‡§∏‡•ç‡§µ‡§æ‡§®", "‡§ó‡•å‡§∞‡•à‡§Ø‡§æ", "‡§ï‡§†‡§´‡•ã‡§°‡§º‡§µ‡§æ", "‡§§‡•ã‡§§‡§æ"}, 2));
        allQuestions.add(new Question(R.drawable.owl, new String[]{"‡§ï‡§¨‡•Ç‡§§‡§∞", "‡§â‡§≤‡•ç‡§≤‡•Ç", "‡§Æ‡•ã‡§∞", "‡§ï‡•å‡§µ‡§æ"}, 1));
        allQuestions.add(new Question(R.drawable.swan, new String[]{"‡§§‡•ã‡§§‡§æ", "‡§™‡•á‡§Ç‡§ó‡•Å‡§á‡§®", "‡§∏‡•ç‡§µ‡§æ‡§®", "‡§ö‡•Ä‡§≤"}, 2));
        allQuestions.add(new Question(R.drawable.parrot, new String[]{"‡§ï‡•å‡§µ‡§æ", "‡§Æ‡•ã‡§∞", "‡§§‡•ã‡§§‡§æ", "‡§â‡§≤‡•ç‡§≤‡•Ç"}, 2));
    }

    private void loadPatriotsQuestions(){
        allQuestions.add(new Question(R.drawable.bhagatsingh, new String[]{"‡§≠‡§ó‡§§ ‡§∏‡§ø‡§Ç‡§π", "‡§ö‡§Ç‡§¶‡•ç‡§∞‡§∂‡•á‡§ñ‡§∞ ‡§Ü‡§ú‡§º‡§æ‡§¶", "‡§∏‡•Å‡§ñ‡§¶‡•á‡§µ", "‡§Æ‡§Ç‡§ó‡§≤ ‡§™‡§æ‡§Ç‡§°‡•á"}, 0));
        allQuestions.add(new Question(R.drawable.chandrashekharazad, new String[]{"‡§Æ‡§π‡§æ‡§§‡•ç‡§Æ‡§æ ‡§ó‡§æ‡§Ç‡§ß‡•Ä", "‡§ö‡§Ç‡§¶‡•ç‡§∞‡§∂‡•á‡§ñ‡§∞ ‡§Ü‡§ú‡§º‡§æ‡§¶", "‡§≤‡§æ‡§≤ ‡§¨‡§π‡§æ‡§¶‡•Å‡§∞ ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞‡•Ä", "‡§§‡§æ‡§Ç‡§§‡•ç‡§Ø‡§æ ‡§ü‡•ã‡§™‡•á"}, 1));
        allQuestions.add(new Question(R.drawable.khudirambose, new String[]{"‡§∏‡•Å‡§≠‡§æ‡§∑ ‡§ö‡§Ç‡§¶‡•ç‡§∞ ‡§¨‡•ã‡§∏", "‡§ñ‡•Å‡§¶‡•Ä‡§∞‡§æ‡§Æ ‡§¨‡•ã‡§∏", "‡§∞‡§æ‡§Æ ‡§™‡•ç‡§∞‡§∏‡§æ‡§¶ ‡§¨‡§ø‡§∏‡•ç‡§Æ‡§ø‡§≤", "‡§∏‡•Å‡§ñ‡§¶‡•á‡§µ"}, 1));
        allQuestions.add(new Question(R.drawable.lalbahadurshastri, new String[]{"‡§≤‡§æ‡§≤ ‡§¨‡§π‡§æ‡§¶‡•Å‡§∞ ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞‡•Ä", "‡§≠‡§ó‡§§ ‡§∏‡§ø‡§Ç‡§π", "‡§Æ‡§π‡§æ‡§§‡•ç‡§Æ‡§æ ‡§ó‡§æ‡§Ç‡§ß‡•Ä", "‡§∞‡§æ‡§®‡•Ä ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Æ‡•Ä‡§¨‡§æ‡§à"}, 0));
        allQuestions.add(new Question(R.drawable.mahatmagandhi, new String[]{"‡§∏‡•Å‡§≠‡§æ‡§∑ ‡§ö‡§Ç‡§¶‡•ç‡§∞ ‡§¨‡•ã‡§∏", "‡§≤‡§æ‡§≤ ‡§¨‡§π‡§æ‡§¶‡•Å‡§∞ ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞‡•Ä", "‡§Æ‡§π‡§æ‡§§‡•ç‡§Æ‡§æ ‡§ó‡§æ‡§Ç‡§ß‡•Ä", "‡§∏‡§∞‡§¶‡§æ‡§∞ ‡§µ‡§≤‡•ç‡§≤‡§≠‡§≠‡§æ‡§à ‡§™‡§ü‡•á‡§≤"}, 2));
        allQuestions.add(new Question(R.drawable.mangalpandey, new String[]{"‡§§‡§æ‡§Ç‡§§‡•ç‡§Ø‡§æ ‡§ü‡•ã‡§™‡•á", "‡§Æ‡§Ç‡§ó‡§≤ ‡§™‡§æ‡§Ç‡§°‡•á", "‡§∞‡§æ‡§Æ ‡§™‡•ç‡§∞‡§∏‡§æ‡§¶ ‡§¨‡§ø‡§∏‡•ç‡§Æ‡§ø‡§≤", "‡§≠‡§ó‡§§ ‡§∏‡§ø‡§Ç‡§π"}, 1));
        allQuestions.add(new Question(R.drawable.ramprasadbismil, new String[]{"‡§∞‡§æ‡§Æ ‡§™‡•ç‡§∞‡§∏‡§æ‡§¶ ‡§¨‡§ø‡§∏‡•ç‡§Æ‡§ø‡§≤", "‡§∏‡•Å‡§ñ‡§¶‡•á‡§µ", "‡§Æ‡§π‡§æ‡§§‡•ç‡§Æ‡§æ ‡§ó‡§æ‡§Ç‡§ß‡•Ä", "‡§ñ‡•Å‡§¶‡•Ä‡§∞‡§æ‡§Æ ‡§¨‡•ã‡§∏"}, 0));
        allQuestions.add(new Question(R.drawable.ranilaxmibai, new String[]{"‡§∞‡§æ‡§®‡•Ä ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Æ‡•Ä‡§¨‡§æ‡§à", "‡§∏‡•Å‡§≠‡§æ‡§∑ ‡§ö‡§Ç‡§¶‡•ç‡§∞ ‡§¨‡•ã‡§∏", "‡§≠‡§ó‡§§ ‡§∏‡§ø‡§Ç‡§π", "‡§≤‡§æ‡§≤ ‡§¨‡§π‡§æ‡§¶‡•Å‡§∞ ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞‡•Ä"}, 0));
        allQuestions.add(new Question(R.drawable.sardarvallabhbhaipatel, new String[]{"‡§ö‡§Ç‡§¶‡•ç‡§∞‡§∂‡•á‡§ñ‡§∞ ‡§Ü‡§ú‡§º‡§æ‡§¶", "‡§∏‡•Å‡§≠‡§æ‡§∑ ‡§ö‡§Ç‡§¶‡•ç‡§∞ ‡§¨‡•ã‡§∏", "‡§∏‡§∞‡§¶‡§æ‡§∞ ‡§µ‡§≤‡•ç‡§≤‡§≠‡§≠‡§æ‡§à ‡§™‡§ü‡•á‡§≤", "‡§Æ‡§π‡§æ‡§§‡•ç‡§Æ‡§æ ‡§ó‡§æ‡§Ç‡§ß‡•Ä"}, 2));
        allQuestions.add(new Question(R.drawable.subhashchandrabose, new String[]{"‡§∏‡•Å‡§≠‡§æ‡§∑ ‡§ö‡§Ç‡§¶‡•ç‡§∞ ‡§¨‡•ã‡§∏", "‡§∞‡§æ‡§Æ ‡§™‡•ç‡§∞‡§∏‡§æ‡§¶ ‡§¨‡§ø‡§∏‡•ç‡§Æ‡§ø‡§≤", "‡§≠‡§ó‡§§ ‡§∏‡§ø‡§Ç‡§π", "‡§≤‡§æ‡§≤ ‡§¨‡§π‡§æ‡§¶‡•Å‡§∞ ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞‡•Ä"}, 0));
        allQuestions.add(new Question(R.drawable.sukhdev, new String[]{"‡§∏‡•Å‡§ñ‡§¶‡•á‡§µ", "‡§Æ‡§Ç‡§ó‡§≤ ‡§™‡§æ‡§Ç‡§°‡•á", "‡§ö‡§Ç‡§¶‡•ç‡§∞‡§∂‡•á‡§ñ‡§∞ ‡§Ü‡§ú‡§º‡§æ‡§¶", "‡§ñ‡•Å‡§¶‡•Ä‡§∞‡§æ‡§Æ ‡§¨‡•ã‡§∏"}, 0));
        allQuestions.add(new Question(R.drawable.tatyatope, new String[]{"‡§∞‡§æ‡§Æ ‡§™‡•ç‡§∞‡§∏‡§æ‡§¶ ‡§¨‡§ø‡§∏‡•ç‡§Æ‡§ø‡§≤", "‡§§‡§æ‡§Ç‡§§‡•ç‡§Ø‡§æ ‡§ü‡•ã‡§™‡•á", "‡§∏‡•Å‡§≠‡§æ‡§∑ ‡§ö‡§Ç‡§¶‡•ç‡§∞ ‡§¨‡•ã‡§∏", "‡§≤‡§æ‡§≤ ‡§¨‡§π‡§æ‡§¶‡•Å‡§∞ ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞‡•Ä"}, 1));
    }


    private void loadAnimalQuestions() {
        allQuestions.add(new Question(R.drawable.cow, new String[]{"‡§ó‡§æ‡§Ø", "‡§≠‡•à‡§Ç‡§∏", "‡§¨‡§ï‡§∞‡•Ä", "‡§ò‡•ã‡§°‡§º‡§æ"}, 0));
        allQuestions.add(new Question(R.drawable.dog, new String[]{"‡§ï‡•Å‡§§‡•ç‡§§‡§æ", "‡§¨‡§ø‡§≤‡•ç‡§≤‡•Ä", "‡§≠‡•á‡§°‡§º", "‡§∏‡•Å‡§Ö‡§∞"}, 0));
        allQuestions.add(new Question(R.drawable.cat, new String[]{"‡§ï‡•Å‡§§‡•ç‡§§‡§æ", "‡§¨‡§ø‡§≤‡•ç‡§≤‡•Ä", "‡§ö‡•Ç‡§π‡§æ", "‡§ñ‡§∞‡§ó‡•ã‡§∂"}, 1));
        allQuestions.add(new Question(R.drawable.donkey, new String[]{"‡§ò‡•ã‡§°‡§º‡§æ", "‡§ó‡§æ‡§Ø", "‡§ó‡§ß‡§æ", "‡§¨‡§ï‡§∞‡•Ä"}, 2));
        allQuestions.add(new Question(R.drawable.deer, new String[]{"‡§π‡§ø‡§∞‡§£", "‡§ñ‡§∞‡§ó‡•ã‡§∂", "‡§ò‡•ã‡§°‡§º‡§æ", "‡§ó‡§æ‡§Ø"}, 0));
        allQuestions.add(new Question(R.drawable.fox, new String[]{"‡§ï‡•Å‡§§‡•ç‡§§‡§æ", "‡§≠‡•á‡§°‡§º‡§ø‡§Ø‡§æ", "‡§≤‡•ã‡§Æ‡§°‡§º‡•Ä", "‡§¨‡§ø‡§≤‡•ç‡§≤‡•Ä"}, 2));
        allQuestions.add(new Question(R.drawable.giraffe, new String[]{"‡§π‡§æ‡§•‡•Ä", "‡§ú‡§ø‡§∞‡§æ‡§´‡§º", "‡§ä‡§Å‡§ü", "‡§ò‡•ã‡§°‡§º‡§æ"}, 1));
        allQuestions.add(new Question(R.drawable.goat, new String[]{"‡§≠‡•á‡§°‡§º", "‡§ó‡§ß‡§æ", "‡§¨‡§ï‡§∞‡•Ä", "‡§ó‡§æ‡§Ø"}, 2));
        allQuestions.add(new Question(R.drawable.horse, new String[]{"‡§ó‡§ß‡§æ", "‡§ò‡•ã‡§°‡§º‡§æ", "‡§ä‡§Å‡§ü", "‡§ï‡•Å‡§§‡•ç‡§§‡§æ"}, 1));
        allQuestions.add(new Question(R.drawable.hen, new String[]{"‡§¨‡§§‡§ñ", "‡§Æ‡•Å‡§∞‡•ç‡§ó‡•Ä", "‡§ï‡§¨‡•Ç‡§§‡§∞", "‡§Æ‡•ã‡§∞"}, 1));
    }


    private void loadVegetableQuestions() {
        allQuestions.add(new Question(R.drawable.tomato, new String[]{"‡§ü‡§Æ‡§æ‡§ü‡§∞", "‡§Ü‡§≤‡•Ç", "‡§™‡•ç‡§Ø‡§æ‡§ú", "‡§ó‡§æ‡§ú‡§∞"}, 0));
        allQuestions.add(new Question(R.drawable.potatoe, new String[]{"‡§∂‡§ï‡§∞‡§ï‡§Ç‡§¶", "‡§Ü‡§≤‡•Ç", "‡§Æ‡•Ç‡§≤‡•Ä", "‡§ö‡•Å‡§ï‡§Ç‡§¶‡§∞"}, 1));
        allQuestions.add(new Question(R.drawable.onion, new String[]{"‡§≤‡§π‡§∏‡•Å‡§®", "‡§Ö‡§¶‡§∞‡§ï", "‡§™‡•ç‡§Ø‡§æ‡§ú", "‡§Æ‡§ø‡§∞‡•ç‡§ö"}, 2));
        allQuestions.add(new Question(R.drawable.carrot, new String[]{"‡§Æ‡•Ç‡§≤‡•Ä", "‡§ö‡•Å‡§ï‡§Ç‡§¶‡§∞", "‡§∂‡§≤‡§ó‡§Æ", "‡§ó‡§æ‡§ú‡§∞"}, 3));
        allQuestions.add(new Question(R.drawable.cabbage, new String[]{"‡§™‡§§‡•ç‡§§‡§æ‡§ó‡•ã‡§≠‡•Ä", "‡§´‡•Ç‡§≤‡§ó‡•ã‡§≠‡•Ä", "‡§™‡§æ‡§≤‡§ï", "‡§Æ‡•á‡§•‡•Ä"}, 0));
        allQuestions.add(new Question(R.drawable.cucumber, new String[]{"‡§ñ‡•Ä‡§∞‡§æ", "‡§§‡•ã‡§∞‡•Ä", "‡§≤‡•å‡§ï‡•Ä", "‡§ï‡§ï‡§°‡§º‡•Ä"}, 0));
        allQuestions.add(new Question(R.drawable.cauliflower, new String[]{"‡§´‡•Ç‡§≤‡§ó‡•ã‡§≠‡•Ä", "‡§™‡§§‡•ç‡§§‡§æ‡§ó‡•ã‡§≠‡•Ä", "‡§¨‡•ç‡§∞‡•ã‡§ï‡§≤‡•Ä", "‡§™‡§æ‡§≤‡§ï"}, 0));
        allQuestions.add(new Question(R.drawable.corn, new String[]{"‡§Æ‡§ï‡•ç‡§ï‡§æ", "‡§ö‡§®‡§æ", "‡§Ö‡§∞‡§π‡§∞", "‡§∏‡•ã‡§Ø‡§æ‡§¨‡•Ä‡§®"}, 0));
        allQuestions.add(new Question(R.drawable.brinjal, new String[]{"‡§ï‡§∞‡•á‡§≤‡§æ", "‡§§‡•ã‡§∞‡•Ä", "‡§¨‡•à‡§Ç‡§ó‡§®", "‡§≠‡§ø‡§Ç‡§°‡•Ä"}, 2));
        allQuestions.add(new Question(R.drawable.ladyfinger, new String[]{"‡§¨‡•à‡§Ç‡§ó‡§®", "‡§ï‡§∞‡•á‡§≤‡§æ", "‡§≠‡§ø‡§Ç‡§°‡•Ä", "‡§§‡•ã‡§∞‡•Ä"}, 2));
    }


    private void loadMonumentQuestions() {
        allQuestions.add(new Question(R.drawable.taj_mahal, new String[]{"‡§§‡§æ‡§ú‡§Æ‡§π‡§≤", "‡§≤‡§æ‡§≤ ‡§ï‡§ø‡§≤‡§æ", "‡§ï‡•Å‡§§‡•Å‡§¨ ‡§Æ‡•Ä‡§®‡§æ‡§∞", "‡§π‡§µ‡§æ ‡§Æ‡§π‡§≤"}, 0));
        allQuestions.add(new Question(R.drawable.red_fort, new String[]{"‡§Ü‡§ó‡§∞‡§æ ‡§ï‡§ø‡§≤‡§æ", "‡§≤‡§æ‡§≤ ‡§ï‡§ø‡§≤‡§æ", "‡§Æ‡•á‡§π‡§∞‡§æ‡§®‡§ó‡§¢‡§º", "‡§ö‡§ø‡§§‡•ç‡§§‡•å‡§°‡§º‡§ó‡§¢‡§º"}, 1));
        allQuestions.add(new Question(R.drawable.qutub_minar, new String[]{"‡§ö‡§æ‡§∞‡§Æ‡•Ä‡§®‡§æ‡§∞", "‡§ó‡•á‡§ü‡§µ‡•á ‡§ë‡§´ ‡§á‡§Ç‡§°‡§ø‡§Ø‡§æ", "‡§ï‡•Å‡§§‡•Å‡§¨ ‡§Æ‡•Ä‡§®‡§æ‡§∞", "‡§µ‡§ø‡§ï‡•ç‡§ü‡•ã‡§∞‡§ø‡§Ø‡§æ ‡§Æ‡•á‡§Æ‡•ã‡§∞‡§ø‡§Ø‡§≤"}, 2));
        allQuestions.add(new Question(R.drawable.hawa_mahal, new String[]{"‡§∏‡§ø‡§ü‡•Ä ‡§™‡•à‡§≤‡•á‡§∏", "‡§π‡§µ‡§æ ‡§Æ‡§π‡§≤", "‡§Ö‡§Æ‡•ç‡§¨‡§∞ ‡§™‡•à‡§≤‡•á‡§∏", "‡§ú‡§≤ ‡§Æ‡§π‡§≤"}, 1));
        allQuestions.add(new Question(R.drawable.gateway_of_india, new String[]{"‡§á‡§Ç‡§°‡§ø‡§Ø‡§æ ‡§ó‡•á‡§ü", "‡§ó‡•á‡§ü‡§µ‡•á ‡§ë‡§´ ‡§á‡§Ç‡§°‡§ø‡§Ø‡§æ", "‡§ö‡§æ‡§∞‡§Æ‡•Ä‡§®‡§æ‡§∞", "‡§µ‡§ø‡§ï‡•ç‡§ü‡•ã‡§∞‡§ø‡§Ø‡§æ ‡§Æ‡•á‡§Æ‡•ã‡§∞‡§ø‡§Ø‡§≤"}, 1));
        allQuestions.add(new Question(R.drawable.char_minar, new String[]{"‡§ö‡§æ‡§∞‡§Æ‡•Ä‡§®‡§æ‡§∞", "‡§ï‡•Å‡§§‡•Å‡§¨ ‡§Æ‡•Ä‡§®‡§æ‡§∞", "‡§ó‡•á‡§ü‡§µ‡•á ‡§ë‡§´ ‡§á‡§Ç‡§°‡§ø‡§Ø‡§æ", "‡§π‡§µ‡§æ ‡§Æ‡§π‡§≤"}, 0));
        allQuestions.add(new Question(R.drawable.india_gate, new String[]{"‡§á‡§Ç‡§°‡§ø‡§Ø‡§æ ‡§ó‡•á‡§ü", "‡§ó‡•á‡§ü‡§µ‡•á ‡§ë‡§´ ‡§á‡§Ç‡§°‡§ø‡§Ø‡§æ", "‡§Ö‡§∂‡•ã‡§ï ‡§∏‡•ç‡§§‡§Ç‡§≠", "‡§µ‡§ø‡§ú‡§Ø ‡§∏‡•ç‡§§‡§Ç‡§≠"}, 0));
        allQuestions.add(new Question(R.drawable.victoria_memorial, new String[]{"‡§Ö‡§ï‡•ç‡§∑‡§∞‡§ß‡§æ‡§Æ ‡§Æ‡§Ç‡§¶‡§ø‡§∞", "‡§µ‡§ø‡§ï‡•ç‡§ü‡•ã‡§∞‡§ø‡§Ø‡§æ ‡§Æ‡•á‡§Æ‡•ã‡§∞‡§ø‡§Ø‡§≤", "‡§¨‡§ø‡§∞‡§≤‡§æ ‡§Æ‡§Ç‡§¶‡§ø‡§∞", "‡§ï‡§Æ‡§≤ ‡§Æ‡§Ç‡§¶‡§ø‡§∞"}, 1));
        allQuestions.add(new Question(R.drawable.sanchi_stupa, new String[]{"‡§π‡§ø‡§Ç‡§¶‡•Ç ‡§ß‡§∞‡•ç‡§Æ", "‡§á‡§∏‡•ç‡§≤‡§æ‡§Æ", "‡§∏‡§ø‡§ñ ‡§ß‡§∞‡•ç‡§Æ", "‡§¨‡•å‡§¶‡•ç‡§ß ‡§ß‡§∞‡•ç‡§Æ"}, 3));
        allQuestions.add(new Question(R.drawable.mysore_palace, new String[]{"‡§≤‡§æ‡§≤ ‡§ï‡§ø‡§≤‡§æ", "‡§π‡§µ‡§æ ‡§Æ‡§π‡§≤", "‡§∏‡§æ‡§Ç‡§ö‡•Ä ‡§∏‡•ç‡§§‡•Ç‡§™", "‡§Æ‡•à‡§∏‡•Ç‡§∞ ‡§™‡•à‡§≤‡•á‡§∏"}, 3));
    }


    private void restartQuiz() {
        score = 0;
        currentQuestionIndex = 0;
        Collections.shuffle(allQuestions);
        int questionCount = Math.min(5, allQuestions.size());
        selectedQuestions = allQuestions.subList(0, questionCount);
        showQuestion();
    }
}